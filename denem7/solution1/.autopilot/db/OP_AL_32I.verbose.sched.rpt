

================================================================
== Vitis HLS Report for 'OP_AL_32I'
================================================================
* Date:           Wed Mar  6 18:26:26 2024

* Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
* Project:        denem7
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  2.862 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.86>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%op2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op2_val"   --->   Operation 2 'read' 'op2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%op1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op1_val"   --->   Operation 3 'read' 'op1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%func3_val_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %func3_val"   --->   Operation 4 'read' 'func3_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%func7_val_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %func7_val"   --->   Operation 5 'read' 'func7_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%opcode_val_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %opcode_val"   --->   Operation 6 'read' 'opcode_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty = trunc i32 %op1_val_read"   --->   Operation 7 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty_61 = trunc i32 %op2_val_read"   --->   Operation 8 'trunc' 'empty_61' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.72ns)   --->   "%switch_ln10 = switch i6 %opcode_val_read, void %sw.epilog126, i6 51, void %sw.bb, i6 19, void %sw.bb57" [OP_AL_32I.cpp:10]   --->   Operation 9 'switch' 'switch_ln10' <Predicate = true> <Delay = 0.72>
ST_1 : Operation 10 [1/1] (0.69ns)   --->   "%switch_ln37 = switch i3 %func3_val_read, void %sw.bb119, i3 0, void %sw.bb59, i3 1, void %sw.bb62, i3 2, void %sw.bb66, i3 3, void %sw.bb82, i3 4, void %sw.bb100, i3 5, void %sw.bb102, i3 6, void %sw.bb117" [OP_AL_32I.cpp:37]   --->   Operation 10 'switch' 'switch_ln37' <Predicate = (opcode_val_read == 19)> <Delay = 0.69>
ST_1 : Operation 11 [1/1] (0.28ns)   --->   "%rd_val_6 = or i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:50]   --->   Operation 11 'or' 'rd_val_6' <Predicate = (opcode_val_read == 19 & func3_val_read == 6)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.72ns)   --->   "%br_ln50 = br void %sw.epilog126" [OP_AL_32I.cpp:50]   --->   Operation 12 'br' 'br_ln50' <Predicate = (opcode_val_read == 19 & func3_val_read == 6)> <Delay = 0.72>
ST_1 : Operation 13 [1/1] (0.72ns)   --->   "%switch_ln44 = switch i7 %func7_val_read, void %sw.epilog126, i7 0, void %sw.bb104, i7 32, void %sw.bb110" [OP_AL_32I.cpp:44]   --->   Operation 13 'switch' 'switch_ln44' <Predicate = (opcode_val_read == 19 & func3_val_read == 5)> <Delay = 0.72>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%trunc_ln46 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:46]   --->   Operation 14 'trunc' 'trunc_ln46' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln46 = zext i5 %trunc_ln46" [OP_AL_32I.cpp:46]   --->   Operation 15 'zext' 'zext_ln46' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.18ns)   --->   "%rd_val_16 = ashr i32 %op1_val_read, i32 %zext_ln46" [OP_AL_32I.cpp:46]   --->   Operation 16 'ashr' 'rd_val_16' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln8_2 = trunc i32 %rd_val_16" [OP_AL_32I.cpp:8]   --->   Operation 17 'trunc' 'trunc_ln8_2' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.72ns)   --->   "%br_ln46 = br void %sw.epilog126" [OP_AL_32I.cpp:46]   --->   Operation 18 'br' 'br_ln46' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.72>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%trunc_ln45 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:45]   --->   Operation 19 'trunc' 'trunc_ln45' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln45 = zext i5 %trunc_ln45" [OP_AL_32I.cpp:45]   --->   Operation 20 'zext' 'zext_ln45' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.18ns)   --->   "%rd_val_15 = lshr i32 %op1_val_read, i32 %zext_ln45" [OP_AL_32I.cpp:45]   --->   Operation 21 'lshr' 'rd_val_15' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln8_1 = trunc i32 %rd_val_15" [OP_AL_32I.cpp:8]   --->   Operation 22 'trunc' 'trunc_ln8_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.72ns)   --->   "%br_ln45 = br void %sw.epilog126" [OP_AL_32I.cpp:45]   --->   Operation 23 'br' 'br_ln45' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 24 [1/1] (0.28ns)   --->   "%rd_val_5 = xor i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:42]   --->   Operation 24 'xor' 'rd_val_5' <Predicate = (opcode_val_read == 19 & func3_val_read == 4)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.72ns)   --->   "%br_ln42 = br void %sw.epilog126" [OP_AL_32I.cpp:42]   --->   Operation 25 'br' 'br_ln42' <Predicate = (opcode_val_read == 19 & func3_val_read == 4)> <Delay = 0.72>
ST_1 : Operation 26 [1/1] (0.95ns)   --->   "%rd_val_4 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:41]   --->   Operation 26 'icmp' 'rd_val_4' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln8_1 = zext i1 %rd_val_4" [OP_AL_32I.cpp:8]   --->   Operation 27 'zext' 'zext_ln8_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.72ns)   --->   "%br_ln41 = br void %sw.epilog126" [OP_AL_32I.cpp:41]   --->   Operation 28 'br' 'br_ln41' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 0.72>
ST_1 : Operation 29 [1/1] (0.95ns)   --->   "%rd_val_3 = icmp_slt  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:40]   --->   Operation 29 'icmp' 'rd_val_3' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i1 %rd_val_3" [OP_AL_32I.cpp:8]   --->   Operation 30 'zext' 'zext_ln8' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.72ns)   --->   "%br_ln40 = br void %sw.epilog126" [OP_AL_32I.cpp:40]   --->   Operation 31 'br' 'br_ln40' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 0.72>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln39 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:39]   --->   Operation 32 'trunc' 'trunc_ln39' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln39 = zext i5 %trunc_ln39" [OP_AL_32I.cpp:39]   --->   Operation 33 'zext' 'zext_ln39' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.18ns)   --->   "%rd_val_2 = shl i32 %op1_val_read, i32 %zext_ln39" [OP_AL_32I.cpp:39]   --->   Operation 34 'shl' 'rd_val_2' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln8 = trunc i32 %rd_val_2" [OP_AL_32I.cpp:8]   --->   Operation 35 'trunc' 'trunc_ln8' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.72ns)   --->   "%br_ln39 = br void %sw.epilog126" [OP_AL_32I.cpp:39]   --->   Operation 36 'br' 'br_ln39' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.72>
ST_1 : Operation 37 [1/1] (0.94ns)   --->   "%rd_val_1 = add i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:38]   --->   Operation 37 'add' 'rd_val_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 0)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.72ns)   --->   "%br_ln38 = br void %sw.epilog126" [OP_AL_32I.cpp:38]   --->   Operation 38 'br' 'br_ln38' <Predicate = (opcode_val_read == 19 & func3_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 39 [1/1] (0.28ns)   --->   "%rd_val = and i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:51]   --->   Operation 39 'and' 'rd_val' <Predicate = (opcode_val_read == 19 & func3_val_read == 7)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.72ns)   --->   "%br_ln51 = br void %sw.epilog126" [OP_AL_32I.cpp:51]   --->   Operation 40 'br' 'br_ln51' <Predicate = (opcode_val_read == 19 & func3_val_read == 7)> <Delay = 0.72>
ST_1 : Operation 41 [1/1] (0.72ns)   --->   "%switch_ln12 = switch i7 %func7_val_read, void %sw.epilog126, i7 0, void %sw.bb2, i7 32, void %sw.bb44" [OP_AL_32I.cpp:12]   --->   Operation 41 'switch' 'switch_ln12' <Predicate = (opcode_val_read == 51)> <Delay = 0.72>
ST_1 : Operation 42 [1/1] (0.72ns)   --->   "%switch_ln27 = switch i3 %func3_val_read, void %sw.epilog126, i3 0, void %sw.bb46, i3 5, void %sw.bb49" [OP_AL_32I.cpp:27]   --->   Operation 42 'switch' 'switch_ln27' <Predicate = (opcode_val_read == 51 & func7_val_read == 32)> <Delay = 0.72>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_val_read, i32 31" [OP_AL_32I.cpp:29]   --->   Operation 43 'bitselect' 'tmp_11' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln29 = br i1 %tmp_11, void %if.end.i, void %if.then.i" [OP_AL_32I.cpp:29]   --->   Operation 44 'br' 'br_ln29' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (1.18ns)   --->   "%ashr_ln29 = ashr i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:29]   --->   Operation 45 'ashr' 'ashr_ln29' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_11)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln29_1 = trunc i32 %ashr_ln29" [OP_AL_32I.cpp:29]   --->   Operation 46 'trunc' 'trunc_ln29_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_11)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.72ns)   --->   "%br_ln29 = br void %sw.epilog126" [OP_AL_32I.cpp:29]   --->   Operation 47 'br' 'br_ln29' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & !tmp_11)> <Delay = 0.72>
ST_1 : Operation 48 [1/1] (0.95ns)   --->   "%sub_ln29 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:29]   --->   Operation 48 'sub' 'sub_ln29' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_11)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (1.18ns)   --->   "%shl_ln29 = shl i32 %op1_val_read, i32 %sub_ln29" [OP_AL_32I.cpp:29]   --->   Operation 49 'shl' 'shl_ln29' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_11)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%trunc_ln29 = trunc i32 %shl_ln29" [OP_AL_32I.cpp:29]   --->   Operation 50 'trunc' 'trunc_ln29' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_11)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.72ns)   --->   "%br_ln29 = br void %sw.epilog126" [OP_AL_32I.cpp:29]   --->   Operation 51 'br' 'br_ln29' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32 & tmp_11)> <Delay = 0.72>
ST_1 : Operation 52 [1/1] (0.94ns)   --->   "%rd_val_14 = sub i31 %empty, i31 %empty_61" [OP_AL_32I.cpp:28]   --->   Operation 52 'sub' 'rd_val_14' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.72ns)   --->   "%br_ln28 = br void %sw.epilog126" [OP_AL_32I.cpp:28]   --->   Operation 53 'br' 'br_ln28' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 0.72>
ST_1 : Operation 54 [1/1] (0.69ns)   --->   "%switch_ln14 = switch i3 %func3_val_read, void %sw.bb41, i3 0, void %sw.bb4, i3 1, void %sw.bb6, i3 2, void %sw.bb8, i3 3, void %sw.bb16, i3 4, void %sw.bb33, i3 5, void %sw.bb35, i3 6, void %sw.bb39" [OP_AL_32I.cpp:14]   --->   Operation 54 'switch' 'switch_ln14' <Predicate = (opcode_val_read == 51 & func7_val_read == 0)> <Delay = 0.69>
ST_1 : Operation 55 [1/1] (0.28ns)   --->   "%rd_val_13 = or i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:21]   --->   Operation 55 'or' 'rd_val_13' <Predicate = (opcode_val_read == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.72ns)   --->   "%br_ln21 = br void %sw.epilog126" [OP_AL_32I.cpp:21]   --->   Operation 56 'br' 'br_ln21' <Predicate = (opcode_val_read == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_val_read, i32 31" [OP_AL_32I.cpp:20]   --->   Operation 57 'bitselect' 'tmp_10' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln20 = br i1 %tmp_10, void %if.end.i279, void %if.then.i272" [OP_AL_32I.cpp:20]   --->   Operation 58 'br' 'br_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (1.18ns)   --->   "%lshr_ln20 = lshr i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:20]   --->   Operation 59 'lshr' 'lshr_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & !tmp_10)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln20_1 = trunc i32 %lshr_ln20" [OP_AL_32I.cpp:20]   --->   Operation 60 'trunc' 'trunc_ln20_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & !tmp_10)> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.72ns)   --->   "%br_ln20 = br void %sw.epilog126" [OP_AL_32I.cpp:20]   --->   Operation 61 'br' 'br_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & !tmp_10)> <Delay = 0.72>
ST_1 : Operation 62 [1/1] (0.95ns)   --->   "%sub_ln20 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:20]   --->   Operation 62 'sub' 'sub_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp_10)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (1.18ns)   --->   "%shl_ln20 = shl i32 %op1_val_read, i32 %sub_ln20" [OP_AL_32I.cpp:20]   --->   Operation 63 'shl' 'shl_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp_10)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln20 = trunc i32 %shl_ln20" [OP_AL_32I.cpp:20]   --->   Operation 64 'trunc' 'trunc_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp_10)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.72ns)   --->   "%br_ln20 = br void %sw.epilog126" [OP_AL_32I.cpp:20]   --->   Operation 65 'br' 'br_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0 & tmp_10)> <Delay = 0.72>
ST_1 : Operation 66 [1/1] (0.28ns)   --->   "%rd_val_12 = xor i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:19]   --->   Operation 66 'xor' 'rd_val_12' <Predicate = (opcode_val_read == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.72ns)   --->   "%br_ln19 = br void %sw.epilog126" [OP_AL_32I.cpp:19]   --->   Operation 67 'br' 'br_ln19' <Predicate = (opcode_val_read == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 68 [1/1] (0.95ns)   --->   "%rd_val_11 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:18]   --->   Operation 68 'icmp' 'rd_val_11' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln8_3 = zext i1 %rd_val_11" [OP_AL_32I.cpp:8]   --->   Operation 69 'zext' 'zext_ln8_3' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.72ns)   --->   "%br_ln18 = br void %sw.epilog126" [OP_AL_32I.cpp:18]   --->   Operation 70 'br' 'br_ln18' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 71 [1/1] (0.95ns)   --->   "%rd_val_10 = icmp_slt  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:17]   --->   Operation 71 'icmp' 'rd_val_10' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln8_2 = zext i1 %rd_val_10" [OP_AL_32I.cpp:8]   --->   Operation 72 'zext' 'zext_ln8_2' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.72ns)   --->   "%br_ln17 = br void %sw.epilog126" [OP_AL_32I.cpp:17]   --->   Operation 73 'br' 'br_ln17' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %op2_val_read, i32 31" [OP_AL_32I.cpp:16]   --->   Operation 74 'bitselect' 'tmp' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln16 = br i1 %tmp, void %if.else.i, void %if.then.i361" [OP_AL_32I.cpp:16]   --->   Operation 75 'br' 'br_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (1.18ns)   --->   "%shl_ln16 = shl i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:16]   --->   Operation 76 'shl' 'shl_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & !tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln16_1 = trunc i32 %shl_ln16" [OP_AL_32I.cpp:16]   --->   Operation 77 'trunc' 'trunc_ln16_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & !tmp)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.72ns)   --->   "%br_ln16 = br void %sw.epilog126" [OP_AL_32I.cpp:16]   --->   Operation 78 'br' 'br_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & !tmp)> <Delay = 0.72>
ST_1 : Operation 79 [1/1] (0.95ns)   --->   "%sub_ln16 = sub i32 0, i32 %op2_val_read" [OP_AL_32I.cpp:16]   --->   Operation 79 'sub' 'sub_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 80 [1/1] (1.18ns)   --->   "%ashr_ln16 = ashr i32 %op1_val_read, i32 %sub_ln16" [OP_AL_32I.cpp:16]   --->   Operation 80 'ashr' 'ashr_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln16 = trunc i32 %ashr_ln16" [OP_AL_32I.cpp:16]   --->   Operation 81 'trunc' 'trunc_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.72ns)   --->   "%br_ln16 = br void %sw.epilog126" [OP_AL_32I.cpp:16]   --->   Operation 82 'br' 'br_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0 & tmp)> <Delay = 0.72>
ST_1 : Operation 83 [1/1] (0.94ns)   --->   "%rd_val_8 = add i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:15]   --->   Operation 83 'add' 'rd_val_8' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.72ns)   --->   "%br_ln15 = br void %sw.epilog126" [OP_AL_32I.cpp:15]   --->   Operation 84 'br' 'br_ln15' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 85 [1/1] (0.28ns)   --->   "%rd_val_7 = and i31 %empty_61, i31 %empty" [OP_AL_32I.cpp:22]   --->   Operation 85 'and' 'rd_val_7' <Predicate = (opcode_val_read == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.72ns)   --->   "%br_ln22 = br void %sw.epilog126" [OP_AL_32I.cpp:22]   --->   Operation 86 'br' 'br_ln22' <Predicate = (opcode_val_read == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 0.72>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%rd_val_9 = phi i31 %rd_val, void %sw.bb119, i31 %rd_val_6, void %sw.bb117, i31 %rd_val_5, void %sw.bb100, i31 %zext_ln8_1, void %sw.bb82, i31 %zext_ln8, void %sw.bb66, i31 %trunc_ln8, void %sw.bb62, i31 %rd_val_1, void %sw.bb59, i31 %trunc_ln8_2, void %sw.bb110, i31 %trunc_ln8_1, void %sw.bb104, i31 %rd_val_14, void %sw.bb46, i31 %trunc_ln29, void %if.then.i, i31 %trunc_ln29_1, void %if.end.i, i31 %rd_val_7, void %sw.bb41, i31 %rd_val_13, void %sw.bb39, i31 %rd_val_12, void %sw.bb33, i31 %zext_ln8_3, void %sw.bb16, i31 %zext_ln8_2, void %sw.bb8, i31 %rd_val_8, void %sw.bb4, i31 %trunc_ln20, void %if.then.i272, i31 %trunc_ln20_1, void %if.end.i279, i31 %trunc_ln16, void %if.then.i361, i31 %trunc_ln16_1, void %if.else.i, i31 0, void %entry, i31 0, void %sw.bb, i31 0, void %sw.bb44, i31 0, void %sw.bb102"   --->   Operation 87 'phi' 'rd_val_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%error = phi i1 0, void %sw.bb119, i1 0, void %sw.bb117, i1 0, void %sw.bb100, i1 0, void %sw.bb82, i1 0, void %sw.bb66, i1 0, void %sw.bb62, i1 0, void %sw.bb59, i1 0, void %sw.bb110, i1 0, void %sw.bb104, i1 0, void %sw.bb46, i1 0, void %if.then.i, i1 0, void %if.end.i, i1 0, void %sw.bb41, i1 0, void %sw.bb39, i1 0, void %sw.bb33, i1 0, void %sw.bb16, i1 0, void %sw.bb8, i1 0, void %sw.bb4, i1 0, void %if.then.i272, i1 0, void %if.end.i279, i1 0, void %if.then.i361, i1 0, void %if.else.i, i1 1, void %entry, i1 1, void %sw.bb, i1 1, void %sw.bb44, i1 1, void %sw.bb102"   --->   Operation 88 'phi' 'error' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %rd_val_9, i1 %error" [OP_AL_32I.cpp:57]   --->   Operation 89 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%ret_ln58 = ret i32 %or_ln" [OP_AL_32I.cpp:58]   --->   Operation 90 'ret' 'ret_ln58' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.862ns
The critical path consists of the following:
	wire read operation ('op2_val_read') on port 'op2_val' [6]  (0.000 ns)
	'sub' operation 32 bit ('sub_ln29', OP_AL_32I.cpp:29) [68]  (0.953 ns)
	'shl' operation 32 bit ('shl_ln29', OP_AL_32I.cpp:29) [69]  (1.181 ns)
	multiplexor before 'phi' operation 31 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:50) ('trunc_ln8_2', OP_AL_32I.cpp:8) ('trunc_ln8_1', OP_AL_32I.cpp:8) ('rd_val', OP_AL_32I.cpp:42) ('zext_ln8_1', OP_AL_32I.cpp:8) ('zext_ln8', OP_AL_32I.cpp:8) ('trunc_ln8', OP_AL_32I.cpp:8) ('rd_val', OP_AL_32I.cpp:38) ('rd_val', OP_AL_32I.cpp:51) ('trunc_ln29_1', OP_AL_32I.cpp:29) ('trunc_ln29', OP_AL_32I.cpp:29) ('rd_val', OP_AL_32I.cpp:28) ('rd_val', OP_AL_32I.cpp:21) ('trunc_ln20_1', OP_AL_32I.cpp:20) ('trunc_ln20', OP_AL_32I.cpp:20) ('rd_val', OP_AL_32I.cpp:19) ('zext_ln8_3', OP_AL_32I.cpp:8) ('zext_ln8_2', OP_AL_32I.cpp:8) ('trunc_ln16_1', OP_AL_32I.cpp:16) ('trunc_ln16', OP_AL_32I.cpp:16) ('rd_val', OP_AL_32I.cpp:15) ('rd_val', OP_AL_32I.cpp:22) [122]  (0.728 ns)
	'phi' operation 31 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:50) ('trunc_ln8_2', OP_AL_32I.cpp:8) ('trunc_ln8_1', OP_AL_32I.cpp:8) ('rd_val', OP_AL_32I.cpp:42) ('zext_ln8_1', OP_AL_32I.cpp:8) ('zext_ln8', OP_AL_32I.cpp:8) ('trunc_ln8', OP_AL_32I.cpp:8) ('rd_val', OP_AL_32I.cpp:38) ('rd_val', OP_AL_32I.cpp:51) ('trunc_ln29_1', OP_AL_32I.cpp:29) ('trunc_ln29', OP_AL_32I.cpp:29) ('rd_val', OP_AL_32I.cpp:28) ('rd_val', OP_AL_32I.cpp:21) ('trunc_ln20_1', OP_AL_32I.cpp:20) ('trunc_ln20', OP_AL_32I.cpp:20) ('rd_val', OP_AL_32I.cpp:19) ('zext_ln8_3', OP_AL_32I.cpp:8) ('zext_ln8_2', OP_AL_32I.cpp:8) ('trunc_ln16_1', OP_AL_32I.cpp:16) ('trunc_ln16', OP_AL_32I.cpp:16) ('rd_val', OP_AL_32I.cpp:15) ('rd_val', OP_AL_32I.cpp:22) [122]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
