

================================================================
== Vitis HLS Report for 'OP_AL_32I'
================================================================
* Date:           Wed Apr 17 11:09:30 2024

* Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
* Project:        denem7
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.900 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.89>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%op2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op2_val"   --->   Operation 2 'read' 'op2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%op1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %op1_val"   --->   Operation 3 'read' 'op1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%func3_val_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %func3_val"   --->   Operation 4 'read' 'func3_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%func7_val_read = read i7 @_ssdm_op_Read.ap_auto.i7, i7 %func7_val"   --->   Operation 5 'read' 'func7_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%opcode_val_read = read i6 @_ssdm_op_Read.ap_auto.i6, i6 %opcode_val"   --->   Operation 6 'read' 'opcode_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%empty = trunc i32 %op1_val_read"   --->   Operation 7 'trunc' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%empty_131 = trunc i32 %op2_val_read"   --->   Operation 8 'trunc' 'empty_131' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.71ns)   --->   "%switch_ln9 = switch i6 %opcode_val_read, void %sw.epilog106, i6 51, void %sw.bb, i6 19, void %sw.bb55" [OP_AL_32I.cpp:9]   --->   Operation 9 'switch' 'switch_ln9' <Predicate = true> <Delay = 0.71>
ST_1 : Operation 10 [1/1] (0.69ns)   --->   "%switch_ln36 = switch i3 %func3_val_read, void %sw.bb97, i3 0, void %sw.bb57, i3 1, void %sw.bb61, i3 2, void %sw.bb66, i3 3, void %sw.bb70, i3 4, void %sw.bb74, i3 5, void %sw.bb78, i3 6, void %sw.bb93" [OP_AL_32I.cpp:36]   --->   Operation 10 'switch' 'switch_ln36' <Predicate = (opcode_val_read == 19)> <Delay = 0.69>
ST_1 : Operation 11 [1/1] (0.28ns)   --->   "%rd_val_7 = or i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:113->OP_AL_32I.cpp:49]   --->   Operation 11 'or' 'rd_val_7' <Predicate = (opcode_val_read == 19 & func3_val_read == 6)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.71ns)   --->   "%br_ln49 = br void %sw.epilog106" [OP_AL_32I.cpp:49]   --->   Operation 12 'br' 'br_ln49' <Predicate = (opcode_val_read == 19 & func3_val_read == 6)> <Delay = 0.71>
ST_1 : Operation 13 [1/1] (0.71ns)   --->   "%switch_ln43 = switch i7 %func7_val_read, void %sw.epilog106, i7 0, void %sw.bb80, i7 32, void %sw.bb85" [OP_AL_32I.cpp:43]   --->   Operation 13 'switch' 'switch_ln43' <Predicate = (opcode_val_read == 19 & func3_val_read == 5)> <Delay = 0.71>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%op2_5 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:45]   --->   Operation 14 'trunc' 'op2_5' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%zext_ln109_1 = zext i5 %op2_5" [OP_AL_32I.cpp:109->OP_AL_32I.cpp:45]   --->   Operation 15 'zext' 'zext_ln109_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (1.18ns)   --->   "%rd_val_19 = ashr i32 %op1_val_read, i32 %zext_ln109_1" [OP_AL_32I.cpp:109->OP_AL_32I.cpp:45]   --->   Operation 16 'ashr' 'rd_val_19' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln7_5 = trunc i32 %rd_val_19" [OP_AL_32I.cpp:7]   --->   Operation 17 'trunc' 'trunc_ln7_5' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.71ns)   --->   "%br_ln45 = br void %sw.epilog106" [OP_AL_32I.cpp:45]   --->   Operation 18 'br' 'br_ln45' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.71>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%op2_4 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:44]   --->   Operation 19 'trunc' 'op2_4' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln105_1 = zext i5 %op2_4" [OP_AL_32I.cpp:105->OP_AL_32I.cpp:44]   --->   Operation 20 'zext' 'zext_ln105_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (1.18ns)   --->   "%rd_val_18 = lshr i32 %op1_val_read, i32 %zext_ln105_1" [OP_AL_32I.cpp:105->OP_AL_32I.cpp:44]   --->   Operation 21 'lshr' 'rd_val_18' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln7_4 = trunc i32 %rd_val_18" [OP_AL_32I.cpp:7]   --->   Operation 22 'trunc' 'trunc_ln7_4' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.71ns)   --->   "%br_ln44 = br void %sw.epilog106" [OP_AL_32I.cpp:44]   --->   Operation 23 'br' 'br_ln44' <Predicate = (opcode_val_read == 19 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 24 [1/1] (0.28ns)   --->   "%rd_val_6 = xor i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:101->OP_AL_32I.cpp:41]   --->   Operation 24 'xor' 'rd_val_6' <Predicate = (opcode_val_read == 19 & func3_val_read == 4)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.71ns)   --->   "%br_ln41 = br void %sw.epilog106" [OP_AL_32I.cpp:41]   --->   Operation 25 'br' 'br_ln41' <Predicate = (opcode_val_read == 19 & func3_val_read == 4)> <Delay = 0.71>
ST_1 : Operation 26 [1/1] (0.95ns)   --->   "%rd_val_4 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:96->OP_AL_32I.cpp:40]   --->   Operation 26 'icmp' 'rd_val_4' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%zext_ln7_1 = zext i1 %rd_val_4" [OP_AL_32I.cpp:7]   --->   Operation 27 'zext' 'zext_ln7_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.71ns)   --->   "%br_ln40 = br void %sw.epilog106" [OP_AL_32I.cpp:40]   --->   Operation 28 'br' 'br_ln40' <Predicate = (opcode_val_read == 19 & func3_val_read == 3)> <Delay = 0.71>
ST_1 : Operation 29 [1/1] (0.95ns)   --->   "%rd_val_3 = icmp_slt  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:92->OP_AL_32I.cpp:39]   --->   Operation 29 'icmp' 'rd_val_3' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i1 %rd_val_3" [OP_AL_32I.cpp:7]   --->   Operation 30 'zext' 'zext_ln7' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.71ns)   --->   "%br_ln39 = br void %sw.epilog106" [OP_AL_32I.cpp:39]   --->   Operation 31 'br' 'br_ln39' <Predicate = (opcode_val_read == 19 & func3_val_read == 2)> <Delay = 0.71>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%op2 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:38]   --->   Operation 32 'trunc' 'op2' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln88 = zext i5 %op2" [OP_AL_32I.cpp:88->OP_AL_32I.cpp:38]   --->   Operation 33 'zext' 'zext_ln88' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.18ns)   --->   "%rd_val_2 = shl i32 %op1_val_read, i32 %zext_ln88" [OP_AL_32I.cpp:88->OP_AL_32I.cpp:38]   --->   Operation 34 'shl' 'rd_val_2' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln7 = trunc i32 %rd_val_2" [OP_AL_32I.cpp:7]   --->   Operation 35 'trunc' 'trunc_ln7' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.71ns)   --->   "%br_ln38 = br void %sw.epilog106" [OP_AL_32I.cpp:38]   --->   Operation 36 'br' 'br_ln38' <Predicate = (opcode_val_read == 19 & func3_val_read == 1)> <Delay = 0.71>
ST_1 : Operation 37 [1/1] (0.94ns)   --->   "%rd_val_1 = add i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:80->OP_AL_32I.cpp:37]   --->   Operation 37 'add' 'rd_val_1' <Predicate = (opcode_val_read == 19 & func3_val_read == 0)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.71ns)   --->   "%br_ln37 = br void %sw.epilog106" [OP_AL_32I.cpp:37]   --->   Operation 38 'br' 'br_ln37' <Predicate = (opcode_val_read == 19 & func3_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 39 [1/1] (0.28ns)   --->   "%rd_val = and i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:117->OP_AL_32I.cpp:50]   --->   Operation 39 'and' 'rd_val' <Predicate = (opcode_val_read == 19 & func3_val_read == 7)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.71ns)   --->   "%br_ln50 = br void %sw.epilog106" [OP_AL_32I.cpp:50]   --->   Operation 40 'br' 'br_ln50' <Predicate = (opcode_val_read == 19 & func3_val_read == 7)> <Delay = 0.71>
ST_1 : Operation 41 [1/1] (0.71ns)   --->   "%switch_ln11 = switch i7 %func7_val_read, void %sw.epilog106, i7 0, void %sw.bb2, i7 32, void %sw.bb37" [OP_AL_32I.cpp:11]   --->   Operation 41 'switch' 'switch_ln11' <Predicate = (opcode_val_read == 51)> <Delay = 0.71>
ST_1 : Operation 42 [1/1] (0.71ns)   --->   "%switch_ln26 = switch i3 %func3_val_read, void %sw.epilog106, i3 0, void %sw.bb39, i3 5, void %sw.bb44" [OP_AL_32I.cpp:26]   --->   Operation 42 'switch' 'switch_ln26' <Predicate = (opcode_val_read == 51 & func7_val_read == 32)> <Delay = 0.71>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%op2_3 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:28]   --->   Operation 43 'trunc' 'op2_3' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%zext_ln109 = zext i5 %op2_3" [OP_AL_32I.cpp:109->OP_AL_32I.cpp:28]   --->   Operation 44 'zext' 'zext_ln109' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (1.18ns)   --->   "%rd_val_17 = ashr i32 %op1_val_read, i32 %zext_ln109" [OP_AL_32I.cpp:109->OP_AL_32I.cpp:28]   --->   Operation 45 'ashr' 'rd_val_17' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%trunc_ln7_3 = trunc i32 %rd_val_17" [OP_AL_32I.cpp:7]   --->   Operation 46 'trunc' 'trunc_ln7_3' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.71ns)   --->   "%br_ln28 = br void %sw.epilog106" [OP_AL_32I.cpp:28]   --->   Operation 47 'br' 'br_ln28' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 32)> <Delay = 0.71>
ST_1 : Operation 48 [1/1] (0.94ns)   --->   "%rd_val_16 = sub i31 %empty, i31 %empty_131" [OP_AL_32I.cpp:80->OP_AL_32I.cpp:27]   --->   Operation 48 'sub' 'rd_val_16' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.71ns)   --->   "%br_ln27 = br void %sw.epilog106" [OP_AL_32I.cpp:27]   --->   Operation 49 'br' 'br_ln27' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 32)> <Delay = 0.71>
ST_1 : Operation 50 [1/1] (0.69ns)   --->   "%switch_ln13 = switch i3 %func3_val_read, void %sw.bb32, i3 0, void %sw.bb4, i3 1, void %sw.bb6, i3 2, void %sw.bb11, i3 3, void %sw.bb15, i3 4, void %sw.bb19, i3 5, void %sw.bb23, i3 6, void %sw.bb28" [OP_AL_32I.cpp:13]   --->   Operation 50 'switch' 'switch_ln13' <Predicate = (opcode_val_read == 51 & func7_val_read == 0)> <Delay = 0.69>
ST_1 : Operation 51 [1/1] (0.28ns)   --->   "%rd_val_15 = or i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:113->OP_AL_32I.cpp:20]   --->   Operation 51 'or' 'rd_val_15' <Predicate = (opcode_val_read == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.71ns)   --->   "%br_ln20 = br void %sw.epilog106" [OP_AL_32I.cpp:20]   --->   Operation 52 'br' 'br_ln20' <Predicate = (opcode_val_read == 51 & func3_val_read == 6 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%op2_2 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:19]   --->   Operation 53 'trunc' 'op2_2' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i5 %op2_2" [OP_AL_32I.cpp:105->OP_AL_32I.cpp:19]   --->   Operation 54 'zext' 'zext_ln105' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (1.18ns)   --->   "%rd_val_14 = lshr i32 %op1_val_read, i32 %zext_ln105" [OP_AL_32I.cpp:105->OP_AL_32I.cpp:19]   --->   Operation 55 'lshr' 'rd_val_14' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln7_2 = trunc i32 %rd_val_14" [OP_AL_32I.cpp:7]   --->   Operation 56 'trunc' 'trunc_ln7_2' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.71ns)   --->   "%br_ln19 = br void %sw.epilog106" [OP_AL_32I.cpp:19]   --->   Operation 57 'br' 'br_ln19' <Predicate = (opcode_val_read == 51 & func3_val_read == 5 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 58 [1/1] (0.28ns)   --->   "%rd_val_13 = xor i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:101->OP_AL_32I.cpp:18]   --->   Operation 58 'xor' 'rd_val_13' <Predicate = (opcode_val_read == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.71ns)   --->   "%br_ln18 = br void %sw.epilog106" [OP_AL_32I.cpp:18]   --->   Operation 59 'br' 'br_ln18' <Predicate = (opcode_val_read == 51 & func3_val_read == 4 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 60 [1/1] (0.95ns)   --->   "%rd_val_12 = icmp_ult  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:96->OP_AL_32I.cpp:17]   --->   Operation 60 'icmp' 'rd_val_12' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln7_3 = zext i1 %rd_val_12" [OP_AL_32I.cpp:7]   --->   Operation 61 'zext' 'zext_ln7_3' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.71ns)   --->   "%br_ln17 = br void %sw.epilog106" [OP_AL_32I.cpp:17]   --->   Operation 62 'br' 'br_ln17' <Predicate = (opcode_val_read == 51 & func3_val_read == 3 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 63 [1/1] (0.95ns)   --->   "%rd_val_11 = icmp_slt  i32 %op1_val_read, i32 %op2_val_read" [OP_AL_32I.cpp:92->OP_AL_32I.cpp:16]   --->   Operation 63 'icmp' 'rd_val_11' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln7_2 = zext i1 %rd_val_11" [OP_AL_32I.cpp:7]   --->   Operation 64 'zext' 'zext_ln7_2' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.71ns)   --->   "%br_ln16 = br void %sw.epilog106" [OP_AL_32I.cpp:16]   --->   Operation 65 'br' 'br_ln16' <Predicate = (opcode_val_read == 51 & func3_val_read == 2 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%op2_1 = trunc i32 %op2_val_read" [OP_AL_32I.cpp:15]   --->   Operation 66 'trunc' 'op2_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln88_1 = zext i5 %op2_1" [OP_AL_32I.cpp:88->OP_AL_32I.cpp:15]   --->   Operation 67 'zext' 'zext_ln88_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (1.18ns)   --->   "%rd_val_10 = shl i32 %op1_val_read, i32 %zext_ln88_1" [OP_AL_32I.cpp:88->OP_AL_32I.cpp:15]   --->   Operation 68 'shl' 'rd_val_10' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 1.18> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%trunc_ln7_1 = trunc i32 %rd_val_10" [OP_AL_32I.cpp:7]   --->   Operation 69 'trunc' 'trunc_ln7_1' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.71ns)   --->   "%br_ln15 = br void %sw.epilog106" [OP_AL_32I.cpp:15]   --->   Operation 70 'br' 'br_ln15' <Predicate = (opcode_val_read == 51 & func3_val_read == 1 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 71 [1/1] (0.94ns)   --->   "%rd_val_9 = add i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:80->OP_AL_32I.cpp:14]   --->   Operation 71 'add' 'rd_val_9' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 0.94> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.94> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 72 [1/1] (0.71ns)   --->   "%br_ln14 = br void %sw.epilog106" [OP_AL_32I.cpp:14]   --->   Operation 72 'br' 'br_ln14' <Predicate = (opcode_val_read == 51 & func3_val_read == 0 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 73 [1/1] (0.28ns)   --->   "%rd_val_8 = and i31 %empty_131, i31 %empty" [OP_AL_32I.cpp:117->OP_AL_32I.cpp:21]   --->   Operation 73 'and' 'rd_val_8' <Predicate = (opcode_val_read == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.71ns)   --->   "%br_ln21 = br void %sw.epilog106" [OP_AL_32I.cpp:21]   --->   Operation 74 'br' 'br_ln21' <Predicate = (opcode_val_read == 51 & func3_val_read == 7 & func7_val_read == 0)> <Delay = 0.71>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%rd_val_5 = phi i31 %rd_val, void %sw.bb97, i31 %rd_val_7, void %sw.bb93, i31 %rd_val_6, void %sw.bb74, i31 %zext_ln7_1, void %sw.bb70, i31 %zext_ln7, void %sw.bb66, i31 %trunc_ln7, void %sw.bb61, i31 %rd_val_1, void %sw.bb57, i31 %trunc_ln7_5, void %sw.bb85, i31 %trunc_ln7_4, void %sw.bb80, i31 %trunc_ln7_3, void %sw.bb44, i31 %rd_val_16, void %sw.bb39, i31 %rd_val_8, void %sw.bb32, i31 %rd_val_15, void %sw.bb28, i31 %trunc_ln7_2, void %sw.bb23, i31 %rd_val_13, void %sw.bb19, i31 %zext_ln7_3, void %sw.bb15, i31 %zext_ln7_2, void %sw.bb11, i31 %trunc_ln7_1, void %sw.bb6, i31 %rd_val_9, void %sw.bb4, i31 0, void %entry, i31 0, void %sw.bb, i31 0, void %sw.bb37, i31 0, void %sw.bb78"   --->   Operation 75 'phi' 'rd_val_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%error = phi i1 0, void %sw.bb97, i1 0, void %sw.bb93, i1 0, void %sw.bb74, i1 0, void %sw.bb70, i1 0, void %sw.bb66, i1 0, void %sw.bb61, i1 0, void %sw.bb57, i1 0, void %sw.bb85, i1 0, void %sw.bb80, i1 0, void %sw.bb44, i1 0, void %sw.bb39, i1 0, void %sw.bb32, i1 0, void %sw.bb28, i1 0, void %sw.bb23, i1 0, void %sw.bb19, i1 0, void %sw.bb15, i1 0, void %sw.bb11, i1 0, void %sw.bb6, i1 0, void %sw.bb4, i1 1, void %entry, i1 1, void %sw.bb, i1 1, void %sw.bb37, i1 1, void %sw.bb78"   --->   Operation 76 'phi' 'error' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%or_ln = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %rd_val_5, i1 %error" [OP_AL_32I.cpp:56]   --->   Operation 77 'bitconcatenate' 'or_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%ret_ln57 = ret i32 %or_ln" [OP_AL_32I.cpp:57]   --->   Operation 78 'ret' 'ret_ln57' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.900ns
The critical path consists of the following:
	wire read operation ('op2_val_read') on port 'op2_val' [6]  (0.000 ns)
	'shl' operation 32 bit ('rd_val', OP_AL_32I.cpp:88->OP_AL_32I.cpp:38) [47]  (1.181 ns)
	multiplexor before 'phi' operation 31 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:113->OP_AL_32I.cpp:49) ('trunc_ln7_5', OP_AL_32I.cpp:7) ('trunc_ln7_4', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:101->OP_AL_32I.cpp:41) ('zext_ln7_1', OP_AL_32I.cpp:7) ('zext_ln7', OP_AL_32I.cpp:7) ('trunc_ln7', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:80->OP_AL_32I.cpp:37) ('rd_val', OP_AL_32I.cpp:117->OP_AL_32I.cpp:50) ('trunc_ln7_3', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:80->OP_AL_32I.cpp:27) ('rd_val', OP_AL_32I.cpp:113->OP_AL_32I.cpp:20) ('trunc_ln7_2', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:101->OP_AL_32I.cpp:18) ('zext_ln7_3', OP_AL_32I.cpp:7) ('zext_ln7_2', OP_AL_32I.cpp:7) ('trunc_ln7_1', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:80->OP_AL_32I.cpp:14) ('rd_val', OP_AL_32I.cpp:117->OP_AL_32I.cpp:21) [104]  (0.719 ns)
	'phi' operation 31 bit ('rd_val') with incoming values : ('rd_val', OP_AL_32I.cpp:113->OP_AL_32I.cpp:49) ('trunc_ln7_5', OP_AL_32I.cpp:7) ('trunc_ln7_4', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:101->OP_AL_32I.cpp:41) ('zext_ln7_1', OP_AL_32I.cpp:7) ('zext_ln7', OP_AL_32I.cpp:7) ('trunc_ln7', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:80->OP_AL_32I.cpp:37) ('rd_val', OP_AL_32I.cpp:117->OP_AL_32I.cpp:50) ('trunc_ln7_3', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:80->OP_AL_32I.cpp:27) ('rd_val', OP_AL_32I.cpp:113->OP_AL_32I.cpp:20) ('trunc_ln7_2', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:101->OP_AL_32I.cpp:18) ('zext_ln7_3', OP_AL_32I.cpp:7) ('zext_ln7_2', OP_AL_32I.cpp:7) ('trunc_ln7_1', OP_AL_32I.cpp:7) ('rd_val', OP_AL_32I.cpp:80->OP_AL_32I.cpp:14) ('rd_val', OP_AL_32I.cpp:117->OP_AL_32I.cpp:21) [104]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
