

================================================================
== Vitis HLS Report for 'hart'
================================================================
* Date:           Wed Apr 17 11:09:30 2024

* Version:        2023.2.2 (Build 4101106 on Feb  9 2024)
* Project:        denem7
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvf1517-3-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.104 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        0|        0|      0 ns|      0 ns|    0|    0|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.10>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%pc_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %pc_val" [hart.cpp:33]   --->   Operation 2 'read' 'pc_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%r2_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %r2_val" [hart.cpp:33]   --->   Operation 3 'read' 'r2_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%r1_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %r1_val" [hart.cpp:33]   --->   Operation 4 'read' 'r1_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%inst_val_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %inst_val" [hart.cpp:33]   --->   Operation 5 'read' 'inst_val_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%opcode = trunc i32 %inst_val_read" [hart.cpp:33]   --->   Operation 6 'trunc' 'opcode' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%func3 = partselect i3 @_ssdm_op_PartSelect.i3.i32.i32.i32, i32 %inst_val_read, i32 12, i32 14" [hart.cpp:35]   --->   Operation 7 'partselect' 'func3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%tmp2 = partselect i7 @_ssdm_op_PartSelect.i7.i32.i32.i32, i32 %inst_val_read, i32 25, i32 31" [hart.cpp:36]   --->   Operation 8 'partselect' 'tmp2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%offset_2 = partselect i12 @_ssdm_op_PartSelect.i12.i32.i32.i32, i32 %inst_val_read, i32 20, i32 31" [hart.cpp:37]   --->   Operation 9 'partselect' 'offset_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%sext_ln37 = sext i12 %offset_2" [hart.cpp:37]   --->   Operation 10 'sext' 'sext_ln37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_val_read, i32 7" [hart.cpp:38]   --->   Operation 11 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_val_read, i32 31" [hart.cpp:38]   --->   Operation 12 'bitselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i4 @_ssdm_op_PartSelect.i4.i32.i32.i32, i32 %inst_val_read, i32 8, i32 11" [hart.cpp:39]   --->   Operation 13 'partselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_3 = partselect i6 @_ssdm_op_PartSelect.i6.i32.i32.i32, i32 %inst_val_read, i32 25, i32 30" [hart.cpp:38]   --->   Operation 14 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%offset_3 = bitconcatenate i13 @_ssdm_op_BitConcatenate.i13.i1.i1.i6.i4.i1, i1 %tmp_8, i1 %tmp, i6 %tmp_3, i4 %tmp_5, i1 0" [hart.cpp:38]   --->   Operation 15 'bitconcatenate' 'offset_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i20 @_ssdm_op_PartSelect.i20.i32.i32.i32, i32 %inst_val_read, i32 12, i32 31" [hart.cpp:41]   --->   Operation 16 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%imm_20_U = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i20.i12, i20 %tmp_6, i12 0" [hart.cpp:41]   --->   Operation 17 'bitconcatenate' 'imm_20_U' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i10 @_ssdm_op_PartSelect.i10.i32.i32.i32, i32 %inst_val_read, i32 21, i32 30" [hart.cpp:42]   --->   Operation 18 'partselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%tmp_9 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %inst_val_read, i32 20" [hart.cpp:42]   --->   Operation 19 'bitselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %inst_val_read, i32 12, i32 19" [hart.cpp:42]   --->   Operation 20 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%offset_1 = bitconcatenate i21 @_ssdm_op_BitConcatenate.i21.i1.i8.i1.i10.i1, i1 %tmp_8, i8 %tmp_s, i1 %tmp_9, i10 %tmp_7, i1 0" [hart.cpp:42]   --->   Operation 21 'bitconcatenate' 'offset_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%sext_ln42 = sext i21 %offset_1" [hart.cpp:42]   --->   Operation 22 'sext' 'sext_ln42' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.70ns)   --->   "%switch_ln45 = switch i7 %opcode, void %sw.epilog, i7 51, void %sw.bb, i7 19, void %sw.bb61, i7 99, void %sw.bb77_ifconv, i7 55, void %sw.bb88, i7 23, void %sw.bb96, i7 111, void %sw.bb106, i7 103, void %sw.bb116" [hart.cpp:45]   --->   Operation 23 'switch' 'switch_ln45' <Predicate = true> <Delay = 0.70>
ST_1 : Operation 24 [1/1] (0.95ns)   --->   "%add_ln80_2 = add i32 %pc_val_read, i32 4" [OP_AL_32I.cpp:80->hart.cpp:73]   --->   Operation 24 'add' 'add_ln80_2' <Predicate = (opcode == 103)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 25 [1/1] (0.95ns)   --->   "%add_ln86_5 = add i32 %sext_ln37, i32 %pc_val_read" [hart.cpp:86->hart.cpp:74]   --->   Operation 25 'add' 'add_ln86_5' <Predicate = (opcode == 103)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 26 [1/1] (0.61ns)   --->   "%icmp_ln75 = icmp_eq  i3 %func3, i3 0" [hart.cpp:75]   --->   Operation 26 'icmp' 'icmp_ln75' <Predicate = (opcode == 103)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln75 = br i1 %icmp_ln75, void %cond.true, void %cond.false" [hart.cpp:75]   --->   Operation 27 'br' 'br_ln75' <Predicate = (opcode == 103)> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_11 = bitset i32 @_ssdm_op_BitSet.i32.i32.i32.i1, i32 %add_ln86_5, i32 0, i1 1" [hart.cpp:75]   --->   Operation 28 'bitset' 'tmp_11' <Predicate = (opcode == 103 & !icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.66ns)   --->   "%br_ln75 = br void %sw.epilog" [hart.cpp:75]   --->   Operation 29 'br' 'br_ln75' <Predicate = (opcode == 103 & !icmp_ln75)> <Delay = 0.66>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_10 = bitset i32 @_ssdm_op_BitSet.i32.i32.i32.i1, i32 %add_ln86_5, i32 0, i1 0" [hart.cpp:75]   --->   Operation 30 'bitset' 'tmp_10' <Predicate = (opcode == 103 & icmp_ln75)> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.66ns)   --->   "%br_ln75 = br void %sw.epilog" [hart.cpp:75]   --->   Operation 31 'br' 'br_ln75' <Predicate = (opcode == 103 & icmp_ln75)> <Delay = 0.66>
ST_1 : Operation 32 [1/1] (0.95ns)   --->   "%add_ln80_1 = add i32 %pc_val_read, i32 4" [OP_AL_32I.cpp:80->hart.cpp:69]   --->   Operation 32 'add' 'add_ln80_1' <Predicate = (opcode == 111)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.95ns)   --->   "%add_ln86_4 = add i32 %sext_ln42, i32 %pc_val_read" [hart.cpp:86->hart.cpp:70]   --->   Operation 33 'add' 'add_ln86_4' <Predicate = (opcode == 111)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.66ns)   --->   "%br_ln71 = br void %sw.epilog" [hart.cpp:71]   --->   Operation 34 'br' 'br_ln71' <Predicate = (opcode == 111)> <Delay = 0.66>
ST_1 : Operation 35 [1/1] (0.95ns)   --->   "%add_ln80 = add i32 %imm_20_U, i32 %pc_val_read" [OP_AL_32I.cpp:80->hart.cpp:65]   --->   Operation 35 'add' 'add_ln80' <Predicate = (opcode == 23)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.95ns)   --->   "%add_ln86_3 = add i32 %pc_val_read, i32 4" [hart.cpp:86->hart.cpp:66]   --->   Operation 36 'add' 'add_ln86_3' <Predicate = (opcode == 23)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.66ns)   --->   "%br_ln67 = br void %sw.epilog" [hart.cpp:67]   --->   Operation 37 'br' 'br_ln67' <Predicate = (opcode == 23)> <Delay = 0.66>
ST_1 : Operation 38 [1/1] (0.95ns)   --->   "%add_ln86_2 = add i32 %pc_val_read, i32 4" [hart.cpp:86->hart.cpp:62]   --->   Operation 38 'add' 'add_ln86_2' <Predicate = (opcode == 55)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.66ns)   --->   "%br_ln63 = br void %sw.epilog" [hart.cpp:63]   --->   Operation 39 'br' 'br_ln63' <Predicate = (opcode == 55)> <Delay = 0.66>
ST_1 : Operation 40 [1/1] (0.95ns)   --->   "%icmp_ln68 = icmp_eq  i32 %r1_val_read, i32 %r2_val_read" [OP_AL_32I.cpp:68->hart.cpp:57]   --->   Operation 40 'icmp' 'icmp_ln68' <Predicate = (opcode == 99 & icmp_ln67_5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%returnval_2 = select i1 %icmp_ln68, i13 %offset_3, i13 4" [OP_AL_32I.cpp:68->hart.cpp:57]   --->   Operation 41 'select' 'returnval_2' <Predicate = (opcode == 99 & icmp_ln67_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 42 [1/1] (0.95ns)   --->   "%icmp_ln69 = icmp_ne  i32 %r1_val_read, i32 %r2_val_read" [OP_AL_32I.cpp:69->hart.cpp:57]   --->   Operation 42 'icmp' 'icmp_ln69' <Predicate = (opcode == 99 & icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node returnval_12)   --->   "%returnval_3 = select i1 %icmp_ln69, i13 %offset_3, i13 4" [OP_AL_32I.cpp:69->hart.cpp:57]   --->   Operation 43 'select' 'returnval_3' <Predicate = (opcode == 99 & icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.95ns)   --->   "%icmp_ln70 = icmp_slt  i32 %r1_val_read, i32 %r2_val_read" [OP_AL_32I.cpp:70->hart.cpp:57]   --->   Operation 44 'icmp' 'icmp_ln70' <Predicate = (opcode == 99 & icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node returnval_11)   --->   "%returnval_4 = select i1 %icmp_ln70, i13 %offset_3, i13 4" [OP_AL_32I.cpp:70->hart.cpp:57]   --->   Operation 45 'select' 'returnval_4' <Predicate = (opcode == 99 & icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.95ns)   --->   "%icmp_ln71 = icmp_slt  i32 %r1_val_read, i32 %r2_val_read" [OP_AL_32I.cpp:71->hart.cpp:57]   --->   Operation 46 'icmp' 'icmp_ln71' <Predicate = (opcode == 99 & icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node returnval_10)   --->   "%xor_ln71 = xor i1 %icmp_ln71, i1 1" [OP_AL_32I.cpp:71->hart.cpp:57]   --->   Operation 47 'xor' 'xor_ln71' <Predicate = (opcode == 99 & icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node returnval_10)   --->   "%returnval_5 = select i1 %xor_ln71, i13 %offset_3, i13 4" [OP_AL_32I.cpp:71->hart.cpp:57]   --->   Operation 48 'select' 'returnval_5' <Predicate = (opcode == 99 & icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 49 [1/1] (0.95ns)   --->   "%icmp_ln72 = icmp_ult  i32 %r1_val_read, i32 %r2_val_read" [OP_AL_32I.cpp:72->hart.cpp:57]   --->   Operation 49 'icmp' 'icmp_ln72' <Predicate = (opcode == 99 & icmp_ln67_1 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node returnval_9)   --->   "%returnval_6 = select i1 %icmp_ln72, i13 %offset_3, i13 4" [OP_AL_32I.cpp:72->hart.cpp:57]   --->   Operation 50 'select' 'returnval_6' <Predicate = (opcode == 99 & icmp_ln67_1 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 51 [1/1] (0.95ns)   --->   "%icmp_ln73 = icmp_ult  i32 %r1_val_read, i32 %r2_val_read" [OP_AL_32I.cpp:73->hart.cpp:57]   --->   Operation 51 'icmp' 'icmp_ln73' <Predicate = (opcode == 99 & icmp_ln67 & !icmp_ln67_1 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.95> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node returnval_9)   --->   "%xor_ln73 = xor i1 %icmp_ln73, i1 1" [OP_AL_32I.cpp:73->hart.cpp:57]   --->   Operation 52 'xor' 'xor_ln73' <Predicate = (opcode == 99 & icmp_ln67 & !icmp_ln67_1 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node returnval_9)   --->   "%returnval_7 = select i1 %xor_ln73, i13 %offset_3, i13 4" [OP_AL_32I.cpp:73->hart.cpp:57]   --->   Operation 53 'select' 'returnval_7' <Predicate = (opcode == 99 & icmp_ln67 & !icmp_ln67_1 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.61ns)   --->   "%icmp_ln67 = icmp_eq  i3 %func3, i3 7" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 54 'icmp' 'icmp_ln67' <Predicate = (opcode == 99 & !icmp_ln67_1 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node returnval_9)   --->   "%returnval_8 = select i1 %icmp_ln67, i13 %returnval_7, i13 1" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 55 'select' 'returnval_8' <Predicate = (opcode == 99 & !icmp_ln67_1 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 56 [1/1] (0.61ns)   --->   "%icmp_ln67_1 = icmp_eq  i3 %func3, i3 6" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 56 'icmp' 'icmp_ln67_1' <Predicate = (opcode == 99 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 57 [1/1] (0.38ns) (out node of the LUT)   --->   "%returnval_9 = select i1 %icmp_ln67_1, i13 %returnval_6, i13 %returnval_8" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 57 'select' 'returnval_9' <Predicate = (opcode == 99 & !icmp_ln67_2 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 58 [1/1] (0.61ns)   --->   "%icmp_ln67_2 = icmp_eq  i3 %func3, i3 5" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 58 'icmp' 'icmp_ln67_2' <Predicate = (opcode == 99 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 59 [1/1] (0.38ns) (out node of the LUT)   --->   "%returnval_10 = select i1 %icmp_ln67_2, i13 %returnval_5, i13 %returnval_9" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 59 'select' 'returnval_10' <Predicate = (opcode == 99 & !icmp_ln67_3 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.61ns)   --->   "%icmp_ln67_3 = icmp_eq  i3 %func3, i3 4" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 60 'icmp' 'icmp_ln67_3' <Predicate = (opcode == 99 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.38ns) (out node of the LUT)   --->   "%returnval_11 = select i1 %icmp_ln67_3, i13 %returnval_4, i13 %returnval_10" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 61 'select' 'returnval_11' <Predicate = (opcode == 99 & !icmp_ln67_4 & !icmp_ln67_5)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.61ns)   --->   "%icmp_ln67_4 = icmp_eq  i3 %func3, i3 1" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 62 'icmp' 'icmp_ln67_4' <Predicate = (opcode == 99 & !icmp_ln67_5)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 63 [1/1] (0.38ns) (out node of the LUT)   --->   "%returnval_12 = select i1 %icmp_ln67_4, i13 %returnval_3, i13 %returnval_11" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 63 'select' 'returnval_12' <Predicate = (opcode == 99 & !icmp_ln67_5)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 64 [1/1] (0.61ns)   --->   "%icmp_ln67_5 = icmp_eq  i3 %func3, i3 0" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 64 'icmp' 'icmp_ln67_5' <Predicate = (opcode == 99)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%returnval = select i1 %icmp_ln67_5, i13 %returnval_2, i13 %returnval_12" [OP_AL_32I.cpp:67->hart.cpp:57]   --->   Operation 65 'select' 'returnval' <Predicate = (opcode == 99)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node add_ln86_6)   --->   "%sext_ln66 = sext i13 %returnval" [OP_AL_32I.cpp:66->hart.cpp:57]   --->   Operation 66 'sext' 'sext_ln66' <Predicate = (opcode == 99)> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.95ns) (out node of the LUT)   --->   "%add_ln86_6 = add i32 %sext_ln66, i32 %pc_val_read" [hart.cpp:86->hart.cpp:58]   --->   Operation 67 'add' 'add_ln86_6' <Predicate = (opcode == 99)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 68 [1/1] (0.66ns)   --->   "%br_ln59 = br void %sw.epilog" [hart.cpp:59]   --->   Operation 68 'br' 'br_ln59' <Predicate = (opcode == 99)> <Delay = 0.66>
ST_1 : Operation 69 [1/1] (1.89ns)   --->   "%return_val_1 = call i32 @OP_AL_32I, i6 19, i7 %tmp2, i3 %func3, i32 %r1_val_read, i32 %sext_ln37" [hart.cpp:52]   --->   Operation 69 'call' 'return_val_1' <Predicate = (opcode == 19)> <Delay = 1.89> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%trunc_ln6 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %return_val_1, i32 1, i32 31" [hart.cpp:53]   --->   Operation 70 'partselect' 'trunc_ln6' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%sext_ln53 = sext i31 %trunc_ln6" [hart.cpp:53]   --->   Operation 71 'sext' 'sext_ln53' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%trunc_ln54 = trunc i32 %return_val_1" [hart.cpp:54]   --->   Operation 72 'trunc' 'trunc_ln54' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.95ns)   --->   "%add_ln86_1 = add i32 %pc_val_read, i32 4" [hart.cpp:86->hart.cpp:54]   --->   Operation 73 'add' 'add_ln86_1' <Predicate = (opcode == 19)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln86_1 = trunc i32 %add_ln86_1" [hart.cpp:86->hart.cpp:54]   --->   Operation 74 'trunc' 'trunc_ln86_1' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.25ns)   --->   "%or_ln86 = or i1 %trunc_ln86_1, i1 %trunc_ln54" [hart.cpp:86->hart.cpp:54]   --->   Operation 75 'or' 'or_ln86' <Predicate = (opcode == 19)> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln86_1, i32 1, i32 31" [hart.cpp:86->hart.cpp:54]   --->   Operation 76 'partselect' 'tmp_2' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%or_ln86_1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_2, i1 %or_ln86" [hart.cpp:86->hart.cpp:54]   --->   Operation 77 'bitconcatenate' 'or_ln86_1' <Predicate = (opcode == 19)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.66ns)   --->   "%br_ln55 = br void %sw.epilog" [hart.cpp:55]   --->   Operation 78 'br' 'br_ln55' <Predicate = (opcode == 19)> <Delay = 0.66>
ST_1 : Operation 79 [1/1] (1.89ns)   --->   "%return_val = call i32 @OP_AL_32I, i6 51, i7 %tmp2, i3 %func3, i32 %r1_val_read, i32 %r2_val_read" [hart.cpp:47]   --->   Operation 79 'call' 'return_val' <Predicate = (opcode == 51)> <Delay = 1.89> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %return_val, i32 1, i32 31" [hart.cpp:48]   --->   Operation 80 'partselect' 'trunc_ln' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%sext_ln48 = sext i31 %trunc_ln" [hart.cpp:48]   --->   Operation 81 'sext' 'sext_ln48' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%trunc_ln49 = trunc i32 %return_val" [hart.cpp:49]   --->   Operation 82 'trunc' 'trunc_ln49' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.95ns)   --->   "%add_ln86 = add i32 %pc_val_read, i32 4" [hart.cpp:86->hart.cpp:49]   --->   Operation 83 'add' 'add_ln86' <Predicate = (opcode == 51)> <Delay = 0.95> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.95> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln86 = trunc i32 %add_ln86" [hart.cpp:86->hart.cpp:49]   --->   Operation 84 'trunc' 'trunc_ln86' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.25ns)   --->   "%or_ln86_2 = or i1 %trunc_ln86, i1 %trunc_ln49" [hart.cpp:86->hart.cpp:49]   --->   Operation 85 'or' 'or_ln86_2' <Predicate = (opcode == 51)> <Delay = 0.25> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.25> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %add_ln86, i32 1, i32 31" [hart.cpp:86->hart.cpp:49]   --->   Operation 86 'partselect' 'tmp_1' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%or_ln1 = bitconcatenate i32 @_ssdm_op_BitConcatenate.i32.i31.i1, i31 %tmp_1, i1 %or_ln86_2" [hart.cpp:86->hart.cpp:49]   --->   Operation 87 'bitconcatenate' 'or_ln1' <Predicate = (opcode == 51)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.66ns)   --->   "%br_ln50 = br void %sw.epilog" [hart.cpp:50]   --->   Operation 88 'br' 'br_ln50' <Predicate = (opcode == 51)> <Delay = 0.66>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%phi_ln83 = phi i32 0, void %entry, i32 %add_ln80_1, void %sw.bb106, i32 %add_ln80, void %sw.bb96, i32 %imm_20_U, void %sw.bb88, i32 0, void %sw.bb77_ifconv, i32 %sext_ln53, void %sw.bb61, i32 %sext_ln48, void %sw.bb, i32 %add_ln80_2, void %cond.false, i32 %add_ln80_2, void %cond.true"   --->   Operation 89 'phi' 'phi_ln83' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%phi_ln83_1 = phi i32 0, void %entry, i32 %add_ln86_4, void %sw.bb106, i32 %add_ln86_3, void %sw.bb96, i32 %add_ln86_2, void %sw.bb88, i32 %add_ln86_6, void %sw.bb77_ifconv, i32 %or_ln86_1, void %sw.bb61, i32 %or_ln1, void %sw.bb, i32 %tmp_10, void %cond.false, i32 %tmp_11, void %cond.true" [hart.cpp:83]   --->   Operation 90 'phi' 'phi_ln83_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%mrv = insertvalue i64 <undef>, i32 %phi_ln83" [hart.cpp:83]   --->   Operation 91 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue i64 %mrv, i32 %phi_ln83_1" [hart.cpp:83]   --->   Operation 92 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%ret_ln83 = ret i64 %mrv_1" [hart.cpp:83]   --->   Operation 93 'ret' 'ret_ln83' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.104ns
The critical path consists of the following:
	wire read operation ('r2_val_read', hart.cpp:33) on port 'r2_val' (hart.cpp:33) [6]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln72', OP_AL_32I.cpp:72->hart.cpp:57) [59]  (0.953 ns)
	'select' operation 13 bit ('returnval', OP_AL_32I.cpp:72->hart.cpp:57) [60]  (0.000 ns)
	'select' operation 13 bit ('returnval', OP_AL_32I.cpp:67->hart.cpp:57) [67]  (0.383 ns)
	'select' operation 13 bit ('returnval', OP_AL_32I.cpp:67->hart.cpp:57) [69]  (0.383 ns)
	'select' operation 13 bit ('returnval', OP_AL_32I.cpp:67->hart.cpp:57) [71]  (0.383 ns)
	'select' operation 13 bit ('returnval', OP_AL_32I.cpp:67->hart.cpp:57) [73]  (0.383 ns)
	'select' operation 13 bit ('returnval', OP_AL_32I.cpp:67->hart.cpp:57) [75]  (0.000 ns)
	'add' operation 32 bit ('add_ln86_6', hart.cpp:86->hart.cpp:58) [77]  (0.953 ns)
	multiplexor before 'phi' operation 32 bit ('op2') with incoming values : ('imm_20_U', hart.cpp:41) ('add_ln80_2', OP_AL_32I.cpp:80->hart.cpp:73) ('add_ln80_1', OP_AL_32I.cpp:80->hart.cpp:69) ('add_ln80', OP_AL_32I.cpp:80->hart.cpp:65) ('sext_ln53', hart.cpp:53) ('sext_ln48', hart.cpp:48) [102]  (0.668 ns)
	'phi' operation 32 bit ('op2') with incoming values : ('imm_20_U', hart.cpp:41) ('add_ln80_2', OP_AL_32I.cpp:80->hart.cpp:73) ('add_ln80_1', OP_AL_32I.cpp:80->hart.cpp:69) ('add_ln80', OP_AL_32I.cpp:80->hart.cpp:65) ('sext_ln53', hart.cpp:53) ('sext_ln48', hart.cpp:48) [102]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
